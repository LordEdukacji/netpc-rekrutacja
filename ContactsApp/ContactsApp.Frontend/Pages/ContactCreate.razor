@page "/contacts/add"
@using ContactsApp.Frontend.Models
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<h1>Add a new contact</h1>

<EditForm Model="contact" OnValidSubmit="Submit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>First name</label>
        <InputText @bind-Value="contact.FirstName"/>
    </div>
    <div>
        <label>Last name</label>
        <InputText @bind-Value="contact.LastName" />
    </div>
    <div>
        <label>E-mail</label>
        <InputText @bind-Value="contact.Email" />
    </div>
    <div>
        <label>Password</label>
        <InputText type="password" @bind-Value="contact.Password" />
    </div>
    <div>
        <label>Phone number</label>
        <InputText @bind-Value="contact.PhoneNumber" />
    </div>
    <div>
        <label>Date of birth</label>
        <InputDate @bind-Value="contact.DateOfBirth" />
    </div>
    <div>
        <label>Category</label>
        <InputRadioGroup @bind-Value="category">
            <InputRadio Value=@("Professional") /> Professional
            <InputRadio Value=@("Private") /> Private
            <InputRadio Value=@("Other") /> Other
        </InputRadioGroup>
    </div>
    <!-- Private has no suboption -->
    @if (category == "Professional")
    {
        <!-- Professional has preset suboptions -->
        <div>
            <label>Subcategory</label>
            <InputRadioGroup @bind-Value="subcategory">
                <InputRadio Value=@("Boss") /> Boss
                <InputRadio Value=@("Client") /> Client
                <InputRadio Value=@("Coworker") /> Coworker
                <InputRadio Value=@("Support") /> Support
            </InputRadioGroup>
        </div>
    }
    else if (category == "Other")
    {
        <!-- Other opens a text field -->
        <div>
            <label>Subcategory</label>
            <InputText @bind-Value="subcategory" />
        </div>
    }

    @if (failed)
    {
        <div>
            Creation failed. Check if the e-mail is unique and if the password is strong enough.
        </div>
    }

    <div>
        <button type="submit">Submit</button>
        <button type="reset">Reset</button>
    </div>
</EditForm>

@code {
    // the contact to send
    private ContactWithCategorization contact = new ContactWithCategorization();

    // flag for errors
    private bool failed = false;

    [Required]
    private string category = "Other";
    private string subcategory = "Unknown";

    private async Task Submit()
    {
        // copy categorization into contact
        this.contact.Categories.Category = category;
        this.contact.Categories.Subcategory = subcategory;

        var postResult = await Http.PostAsJsonAsync("api/contact", contact);

        if (postResult.IsSuccessStatusCode) Navigation.NavigateTo("");
        else failed = true;
    }
}
