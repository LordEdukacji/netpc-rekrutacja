@page "/contacts/{contactid:long}"
@using ContactsApp.Frontend.Models
@inject HttpClient Http

<PageTitle>Contacts</PageTitle>

<h1>Contact details</h1>

@if (contact == null)
{
    if (failed)
    {
        <p>Failed to load contact with ID @ContactId</p>
        <p>Check if you are logged in and if the contact exists</p>
    }
    else
    {
        <p><em>Loading...</em></p>
    }
    
}
else
{
    <NavLink href="contacts/{contactid}/edit">Edit this contact</NavLink>

    <table class="table">
        <thead>
            <tr>
                <th>First name</th>
                <th>Last name</th>
                <th>E-mail</th>
                <th>Password</th>
                <th>Phone number</th>
                <th>Date of birth</th>
                <th>Category</th>
                <th>Subcategory</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@contact.FirstName</td>
                <td>@contact.LastName</td>
                <td>@contact.Email</td>
                <td>@contact.Password</td>
                <td>@contact.PhoneNumber</td>
                <td>@contact.DateOfBirth.ToLongDateString()</td>
                @if (invalidCategory)
                {
                    <td>Unknown category</td>
                    <td>Unknown subcategory</td>
                }
                else
                {
                    <td>@categorization.Category</td>
                    @if (categorization.Subcategory == null)
                    {
                        <td>does not apply</td>
                    }
                    else
                    {
                        <td>@categorization.Subcategory</td>
                    }
                    
                }
            </tr>
        </tbody>
    </table>


}

@code {
    [Parameter]
    public long ContactId { get; set; }
    private Contact? contact;
    private Categorization? categorization;
    private bool failed = false, invalidCategory = false;

    protected override async Task OnInitializedAsync()
    {
        contact = await Http.GetFromJsonAsync<Contact>($"api/contact/{ContactId}");

        if (contact == null)
        {
            failed = true;
            return;
        }

        categorization = await Http.GetFromJsonAsync<Categorization>($"api/contact/category/{contact.CategorizationId}");

        if (categorization == null)
        {
            invalidCategory = true;
        }
    }
}
